{% extends '::BOLayout.html.twig' %}

     {% block pagewrapper %}

         <div id="page-wrapper">
             {% set alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N','O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ] %}


             <!-- En tete -->
             <div class="row">
                 <div class="bs-example">
                     <ul class="breadcrumb">
                         <li><a href="{{ path('ffbb_accueil_connect') }}">Accueil</a></li>
                         <li><a href="{{ path('ffbb_poules_choisir_liste') }}">Choix de la liste d'équipes</a></li>
                         <li class="active">Participants</li>
                     </ul>
                 </div>

                 <div class="col-lg-12">
                     <h3 class="page-header">Vos résultats </h3>
                  </div>
                 <!-- /.col-lg-12 -->
             </div>

             <!-- Affichage résultats statiques -->
             <div class="row">
                 <div class="panel-body">
                     <div class="table-responsive">
                         <table class="table table-striped table-bordered table-hover">

                             <tbody>
                             <tr>
                                 <td>Nom du rapport : {{ nomRapport }}</td>
                             </tr>
                             <tr>
                                 <td>Nom de la liste : {{ nomListe }}</td>
                             </tr>
                             <tr>
                                 <td>Nom du groupe : {{ nomGroupe }}</td>
                             </tr>
                             <tr>

                                 {% if typeMatch == "allerRetour" %}
                                     <td>  Type de rencontre : Optimisation de poules - match aller retour </td>
                                 {% elseif typeMatch == "allerSimple" %}
                                     <td>  Type de rencontre : Optimisation de poules - match aller simple </td>
                                 {% elseif typeMatch == "plateau" %}
                                     <td>  Type de rencontre : Optimisation de poules - plateau </td>
                                 {% else %}
                                     <td> Type de rencontre : {{ typeMatch }} </td>
                                 {% endif %}

                             </tr>
                             <tr>

                                 <td>Poules :
                                 {%  for taillePoule, nombrePoule in infoPoule %}
                                     {% if nombrePoule == 1 %}
                                         {{ nombrePoule }} poule de {{ taillePoule }} équipes
                                     {% else %}
                                         {{ nombrePoule }} poules de {{ taillePoule }} équipes
                                     {% endif %}

                                     {%  if not loop.last %}
                                         et
                                     {% endif %}

                                {% endfor %}
                                </td>

                             </tr>

                                 {% if contraintsExiste == 1 %}
                                 {% set contrainte = "Avec contrainte" %}

                             {% else %}
                                 {% set contrainte = "Sans contrainte" %}

                             {% endif %}
                             <tr>
                                 <td> Contraintes : {{ contrainte  }} </td>
                             </tr>


                             {% if contrainteAccueilPlateauExiste == 1 %}
                                 <tr>
                                     <td> Toutes les équipes doivent accueillir au moins une fois </td>
                                 </tr>
                             {% endif %}

                             {% if refExiste == 1 %}
                                 {#{%  set pourcentage = (100 - (scenarioRef.estimationGenerale.distanceTotale/scenarioOptimalSansContrainte.estimationGenerale.distanceTotale *100))|round %}#}
                                 {%  set distanceRef = scenarioRef.estimationGenerale.distanceTotale %}
                                 {%  set distanceOptimalSc = scenarioOptimalSansContrainte.estimationGenerale.distanceTotale %}
                                 {%  set pourcentage = ( (distanceRef-distanceOptimalSc)/distanceRef*100)|round %}
                                 {% if pourcentage > 0 %}
                                     <tr>
                                         <td> Avec le scénario optimal sans contrainte, vous réduisez de {{ pourcentage }} % le nombre de kilomètres à parcourir, par rapport au scénario de référence </td>
                                     </tr>

                                 {% endif %}


                             {% endif %}

                             {% if changeAffectEquipes %}
                                 <tr><td>&nbsp</td></tr>
                                 <tr>
                                     <td> Liste de changements d'affectation d'équipes : </td>
                                 </tr>
                                 {% for scenario, contenuScenario in changeAffectEquipes %}
                                     {% if scenario == "optimalSansContrainte" %}
                                         {% set scenarioAffichage = "Scénario optimal sans contrainte" %}
                                     {% elseif scenario == "equitableSansContrainte" %}
                                         {% set scenarioAffichage = "Scénario équitable sans contrainte" %}
                                     {% elseif scenario == "optimalAvecContrainte" %}
                                         {% set scenarioAffichage = "Scénario optimal avec contrainte" %}
                                     {% elseif scenario == "equitableAvecContrainte" %}
                                         {% set scenarioAffichage = "Scénario équitable avec contrainte" %}
                                     {% endif %}

                                     {% for changeAffect in contenuScenario %}
                                         <tr>
                                             <td> - {{ scenarioAffichage }} :
                                                 {{ changeAffect.equipeDepartNom   }} (Poule d'origine : {{ alphabet[changeAffect.pouleDepart-1]  }}) -
                                                 {{ changeAffect.equipeDestinationNom }} (Poule d'origine : {{ alphabet[changeAffect.pouleDestination-1] }})


                                             </td>
                                         </tr>

                                     {% endfor %}


                                 {% endfor %}
                             {% endif %}

                             </tbody>
                         </table>
                     </div>
                     <!-- /.table-responsive -->
                 </div>
                 <!-- /.panel-body -->
             </div>

             <!-- Affichage des résultats sur les cartes -->
             {% include 'FfbbBundle:Poules:resultatCalculCartes.html.twig' %}





             <!-- Input utilisateur -->
             <div class="row">
                 <div class="col-lg-12">
                     <h3 class="page-header">Modifier vos options de calcul </h3>
                     <h5 style="float: right"> <strong> (* champs obligatoires)</strong>  </h5>
                 </div>

                 <!-- Type de rencontre bloc -->
                 <div class="col-lg-3">

                     <div class="panel panel-default">
                         <div class="panel-heading">
                             <strong>Type de rencontre*</strong>
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">
                             {% if typeMatch == 'allerRetour' %}

                                 <div class="form-group">
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre1"
                                                    value="allerRetour" checked onclick="typeAllerRetour();">Match aller
                                             retour
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre2"
                                                    value="allerSimple" onclick="typeAller();">Match aller simple
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre3"
                                                    value="plateau" onclick="typePlateau();">Plateau
                                         </label>
                                     </div>
                                 </div>

                             {% elseif typeMatch == 'allerSimple' %}

                                 <div class="form-group">
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre1"
                                                    value="allerRetour" onclick="typeAllerRetour();">Match aller
                                             retour
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre2"
                                                    value="allerSimple" checked onclick="typeAller();">Match aller simple
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre3"
                                                    value="plateau" onclick="typePlateau();">Plateau
                                         </label>
                                     </div>
                                 </div>

                             {% else %}

                                 <div class="form-group">
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre1"
                                                    value="allerRetour" onclick="typeAllerRetour();">Match aller
                                             retour
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre2"
                                                    value="allerSimple"  onclick="typeAller();">Match aller simple
                                         </label>
                                     </div>
                                     <div class="radio">
                                         <label>
                                             <input type="radio" name="typeRencontre" id="typeRencontre3"
                                                    value="plateau" checked onclick="typePlateau();">Plateau
                                         </label>
                                     </div>
                                 </div>

                             {% endif %}


                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Type de rencontre bloc -->
                 <!-- Nombre de poules bloc -->
                 <div class="col-lg-3">
                     <div class="panel panel-default">
                         <div class="panel-heading">
                             <strong>Nombre de poules*</strong>
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">

                             <div class="form-group">
                                 <input id="inputPoulesNbr" type="number" min="1" class="form-control" value="{{ nombrePoule  }}" required>
                             </div>

                             {#<h5> {{ nombrePoule }} poules de {{ taillePoule }} équipes </h5>#}
                             {%  for taillePoule, nombrePoule in infoPoule %}
                                 {% if nombrePoule == 1 %}
                                     {{ nombrePoule }} poule de {{ taillePoule }} équipes
                                 {% else %}
                                     {{ nombrePoule }} poules de {{ taillePoule }} équipes
                                 {% endif %}

                                 {%  if not loop.last %}
                                     et
                                 {% endif %}

                             {% endfor %}

                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Ajouter une contrainte bloc -->

                 <!-- Nombre de poules bloc -->
                 <div class="col-lg-3">
                     <div class="panel panel-default">
                         <div class="panel-heading">
                             Contraintes ajoutées
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">

                             <div class="col-lg-12">
                                 <div class="col-lg-6">
                                     <h5>Interdictions</h5>
                                 </div>
                                 <div class="col-lg-6">
                                     {#<button type="button" class="btn btn-primary pull-right" onclick="ajouterInterdiction();">Voir</button>#}
                                     <button type="button" class="btn btn-primary pull-right" id="btnVoirInterdiction">Voir</button>
                                 </div>

                             </div>
                             <div class="col-lg-12">
                                 <div class="col-lg-6">
                                     <h5>Répartitions homogènes</h5>
                                 </div>
                                 <div class="col-lg-6">
                                     {#<button type="button" class="btn btn-primary pull-right" onclick="ajouterRepartition();">Voir</button>#}
                                     <button type="button" class="btn btn-primary pull-right" id="btnVoirRepartition">Voir</button>
                                 </div>

                             </div>


                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Ajouter une contrainte bloc -->

                 <!-- Nombre de poules bloc -->
                 <div class="col-lg-3">
                     <div class="panel panel-default">
                         <div class="panel-heading">
                             Ajouter une variation du nombre d'équipes par poule
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">
                             <h5>Choisissez le nombre d'équipes par poule à faire varier</h5>

                             <div class="form-group">
                                 {#<input id="variationNbrEquipe" type="number" min="1" class="form-control" required>#}
                                 <select id="variationNbrEquipe" class="form-control input-sm">
                                     {% for proposition in varEquipeParPouleProposition %}
                                         <option value={{ proposition }}>{{ proposition }}</option>
                                     {% endfor %}
                                 </select>
                             </div>

                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Ajouter une contrainte bloc -->

             </div>


             <!-- Contraintes pour le choix plateau -->
             <div class="row">

                 <!-- Nombre de journées bloc -->
                 <div class="col-lg-4" id="nbrJournee" style="display: none">
                     <div class="panel panel-default">
                         <div class="panel-heading">
                             Nombre de journées*
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">
                             <div class="form-group">
                                 <input type="number" min="1" class="form-control" value="4" disabled>

                             </div>

                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Nombre de journées bloc -->

                 <!-- Ajouter une contrainte bloc -->
                 <div class="col-lg-4" id="ajoutContrainte" style="display: none">
                     <div class="panel panel-default">
                         <div class="panel-heading">
                             Ajouter une contrainte
                         </div>
                         <!-- /.panel-heading -->
                         <div class="panel-body">
                             <div class="form-group">
                                 <label class="checkbox-inline">
                                     <input type="checkbox">Toutes les équipes doivent accueillir au moins une fois
                                 </label>

                             </div>

                         </div>
                         <!-- /.panel-body -->
                     </div>
                 </div>
                 <!-- /. Ajouter une contrainte bloc -->


             </div>

             <!-- Ajouter des contraintes d'interdiction -->
             <div class="row">
                 <div class="panel panel-default">
                     <div class="panel-heading">
                         <span id="contrainteInterdiction" style="cursor:pointer"> Ajouter des contraintes d'interdiction </span>
                     </div>
                     <!-- /.panel-heading -->
                     <div class="panel-body" id="contrainteInterdictionBody" style="display: none">

                         <table id="mesContraintes" class="table table-striped table-bordered table-hover">
                             <thead>
                             <tr>
                                 <th width="10%"><h4></h4></th>
                                 <th width="20%"><h4>Equipe N°1</h4></th>
                                 <th width="20%"><h4>Equipe N°2</h4></th>
                                 <th width="10%"><h4></h4></th>
                             </tr>
                             </thead>
                             <tbody id="tbodyInterdictions">
                             {%  if interdictions %}
                                 {% for interdictionNbr, interdictionInfo in interdictions%}
                                     {% set interdictionNbrMod =  interdictionNbr-1 %}
                                     <tr id="interdiction{{ interdictionNbrMod }}" >
                                         <td width="10%" > Interdiction</td>
                                         <td width="20%">
                                             {{ interdictionInfo.noms[0] }}
                                             <span id="interdiction{{ interdictionNbrMod }}equipe1" style="display:none" >  {{ interdictionInfo.ids[0] }} </span>
                                         </td>

                                         <td width="20%">
                                             {{ interdictionInfo.noms[1] }}
                                             <span id="interdiction{{ interdictionNbrMod }}equipe2" style="display:none" > {{ interdictionInfo.ids[1] }} </span>

                                         </td>


                                         <td width="10%">
                                             <button id="btnSupprimerInterdiction{{ interdictionNbrMod }}" class="btn btn-primary"> Supprimer </button>
                                         </td>
                                     </tr>
                                 {%  endfor %}
                             {% endif %}


                             </tbody>


                         </table>
                         <br>

                         <br>
                         <table class="table table-striped table-bordered table-hover">
                             <thead>
                                 <tr>
                                     <th>Equipe N°1</th>
                                     <th>Equipe N°2</th>
                                 </tr>
                             </thead>

                             <tbody>

                                 <tr>
                                     <td width="50%">
                                         <select id="equipe1" class="equipe1">
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                             {% for detailsVille in detailsVilles %}
                                                 <option value={{ detailsVille.id }}>{{ detailsVille.nom }}</option>
                                             {% endfor %}
                                         </select>
                                     </td>

                                     <td width="50%">
                                         <select id="equipe2" class="equipe2">
                                             <option value = "vide" selected> -- selectionnez une option -- </option>
                                             {% for detailsVille in detailsVilles %}
                                                 <option value={{ detailsVille.id }}>{{ detailsVille.nom }}</option>
                                             {% endfor %}
                                         </select>
                                     </td>
                                 </tr>

                             </tbody>
                         </table>



                         <button id="btnAjouterInterdiction" class="btn btn-primary ">Ajouter</button>


                     </div>


                     <!-- /.panel-body -->


                 </div>

             </div>

             <!-- ajouter répartitions homogènes -->
             <div class="row">
                 <div class="panel panel-default">
                     <div class="panel-heading">
                         <span id="contrainteRepartition" style="cursor:pointer"> Ajouter des contraintes de répartition homogène</span>
                     </div>
                     <!-- /.panel-heading -->
                     <div class="panel-body" id="contrainteRepartitionBody" style="display: none">
                         <div class="panel-body">
                             {#<div class="table-responsive" >#}
                             <div class="table-responsive"  style="max-height: 400px; overflow-y: scroll;">
                                 <table class="table table-striped table-bordered table-hover" id="tableContrainteRepartitionHomogene">
                                     <thead>
                                     <tr>
                                         <th style="display: none"></th>
                                         <th><strong>Equipe</strong></th>
                                         <th><strong>Catégorie</strong></th>
                                     </tr>
                                     </thead>
                                     <tbody>

                                     {% for key, detailsVille in detailsVilles %}
                                         <tr id="trRepartitionHomogeneIdVille{{ detailsVille.id }}">
                                             <td style="display: none" id="repartitionHomogeneIdVille{{ key }}">{{ detailsVille.id }}</td>
                                             <td>{{ detailsVille.nom }}</td>
                                             <td>
                                                 <select class="form-control" id="repartitionHomogeneOption{{ key }}">
                                                     {#<option value="Aucun" disabled selected> -- Aucun -- </option>#}
                                                     <option value="Aucun" selected> -- Aucun -- </option>
                                                     <option value="Espoir">Espoir</option>
                                                     <option value="Descendant">Descendant</option>
                                                     <option value="Promu">Promu</option>
                                                     <option value="EquipeNiveauA">Equipe de niveau A</option>
                                                     <option value="EquipeNiveauB">Equipe de niveau B</option>
                                                     <option value="EquipeNiveauC">Equipe de niveau C</option>
                                                     <option value="TeteSerie1">Tête de série 1</option>
                                                     <option value="TeteSerie2">Tête de série 2</option>
                                                 </select>
                                             </td>
                                         </tr>


                                     {% endfor %}

                                     </tbody>
                                 </table>
                             </div>
                             <!-- /.table-responsive -->
                         </div>
                         <!-- /.panel-body -->

                     </div>
                     <!-- /.panel-body -->
                 </div>

                 {#<button type="button" id="verifRepartitionHomogenebtn" class="btn btn-info-poule" onclick="verifRepartitionHomogene()">Valider répartition</button>#}
             </div>




             {% if (typeMatch == "allerRetour" or typeMatch == "allerSimple") %}
             <div class="row">
                 <div class="panel panel-default">
                     <div class="panel-heading">
                         <span id="changeAffectation" style="cursor:pointer"> Changer l’affectation de vos équipes aux poules </span>
                     </div>
                     <!-- /.panel-heading -->
                     <div class="panel-body" id="changeAffectationBody" style="display: none">

                         <table id="tableChangeAffectation" class="table table-striped table-bordered table-hover">
                             <thead>
                                 <tr>
                                     <th width="18%" ><h4>Scénario</h4></th>
                                     <th width="18%" ><h4>Poule de la première équipe à intervertir</h4></th>
                                     <th width="18%" ><h4>Première équipe à intervertir</h4></th>
                                     <th width="18%" ><h4>Poule de la seconde équipe à intervertir</h4></th>
                                     <th width="18%" ><h4>Seconde équipe à intervertir</h4></th>
                                     <th width="10%"><h4></h4></th>
                                 </tr>
                             </thead>

                             <tbody id="tbodyChangeAffectation">
                             </tbody>
                         </table>


                         <br>
                         <table class="table table-striped table-bordered table-hover">
                             <thead>
                                 <tr>
                                     <th width="18%" >Scénario</th>
                                     <th width="18%" >Poule de la première équipe à intervertir</th>
                                     <th width="18%" >Première équipe à intervertir</th>
                                     <th width="18%" >Poule de la seconde équipe à intervertir</th>
                                     <th width="18%" >Seconde équipe à intervertir</th>
                                     <th width="10%"><h4></h4></th>
                                 </tr>
                             </thead>

                             <tbody>

                                 <tr>
                                     <td width="18%" >
                                         <select id="scenarioChangeAffectation" >
                                         {% if contraintsExiste %}
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                             <option value="optimalAvecContrainte"> Optimal avec contrainte</option>
                                             <option value="equitableAvecContrainte"> Equitable avec contrainte</option>
                                             <option value="optimalSansContrainte"> Optimal sans contrainte</option>

                                         {% else %}
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                             <option value="optimalSansContrainte"> Optimal sans contrainte</option>
                                             <option value="equitableSansContrainte"> Equitable sans contrainte</option>

                                         {% endif %}

                                         </select>
                                     </td>
                                     <td width="18%">
                                         <select id="pouleDepart" class="selectChangeAffectation">
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                         </select>
                                     </td>

                                     <td width="18%">
                                         <select id="equipeDepart" class="selectChangeAffectation">
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                         </select>
                                     </td>

                                     <td width="10%" style="max-width: 10%;">
                                         <select id="pouleDestination" class="selectChangeAffectation">
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                         </select>
                                     </td>

                                     <td width="18%">
                                         <select id="equipeDestination" class="selectChangeAffectation" >
                                             <option value="vide" selected> -- selectionnez une option -- </option>
                                         </select>
                                     </td>
                                     <td width="10%">
                                         <button id="btnAjouterChangementAffectation" class="btn btn-primary ">Ajouter</button>
                                     </td>
                                 </tr>

                             </tbody>
                         </table>



                     </div>


                 <!-- /.panel-body -->


                 </div>

             </div>

             {% elseif typeMatch == "plateau" %}
             {% endif %}



             <!-- bouton lancemenet de calcul -->
             <div class="row">
                 <div class="col-lg-12">
                     <button id="lancerCalculBtn" class="btn btn-primary pull-right"> Relancer le calcul</button>
                 </div>
             </div>

         </div>


         {% block javascript %}

             {{ parent() }}

             <script language="javascript">

                 function typePlateau() {
                     var plateau = document.getElementById("typeRencontre3").checked;
                     if (plateau) {
                         document.getElementById("nbrJournee").style.display = "block";
//                         document.getElementById("nbrRencontre").style.display = "block";
                         document.getElementById("ajoutContrainte").style.display = "block";
                     }
                 }

                 function typeAllerRetour() {
                     var allerRetour = document.getElementById("typeRencontre1").checked;
                     if (allerRetour) {
                         document.getElementById("nbrJournee").style.display = "none";
//                         document.getElementById("nbrRencontre").style.display = "none";
                         document.getElementById("ajoutContrainte").style.display = "none";
                     }
                 }

                 function typeAller() {
                     var aller = document.getElementById("typeRencontre2").checked;
                     if (aller) {
                         document.getElementById("nbrJournee").style.display = "none";
//                         document.getElementById("nbrRencontre").style.display = "none";
                         document.getElementById("ajoutContrainte").style.display = "none";
                     }
                 }

                 $(document).ready(function(){
                     // toggle boutons interdictions
                     $("#contrainteInterdiction").click(function(){
                         $("#contrainteInterdictionBody").toggle();
                     });
                     $("#btnVoirInterdiction").click(function(){
                         $("#contrainteInterdictionBody").toggle();
                     });

                     // toggle boutons repartitions homogenes
                     $("#contrainteRepartition").click(function(){
                         $("#contrainteRepartitionBody").toggle();
                     });
                     $("#btnVoirRepartition").click(function(){
                         $("#contrainteRepartitionBody").toggle();
                     });

                     // toggle bouton changement d'affectation
                     $("#changeAffectation").click(function(){
                         $("#changeAffectationBody").toggle();

                     })

                     // remplir les valeurs de repartitions homogenes
                     var repartitionsHomogenes = {{ repartitionsHomogenes| json_encode | raw }};
                     for (var type in repartitionsHomogenes){
//                         console.log(type );
                         var detailsContraints = repartitionsHomogenes[type];
                         var entitesIds = detailsContraints.ids;

                         for (var i=0; i<entitesIds.length; i++){
                             entiteId = entitesIds[i];
                             $("#trRepartitionHomogeneIdVille" + entiteId).find("td select").val(type);
                         }
                     }

                     // obtenir le nombre des interdictions présentes
                     var ligneNbr = $('#tbodyInterdictions tr').length;
                     console.log("ligneNbr : " + ligneNbr);

                     // binding jquery bouton supprimer pour chaque interdiction ajoutée
                     for(var j=0; j< ligneNbr; j++){
                         // binding jquery bouton supprimer
                         $("#btnSupprimerInterdiction" + j).click(function(){
                             $(this).closest('tr').remove();
                         });
                     }

                     // cacher le bouton relancer
                     $("#lancerCalculBtn").hide();

                     // faire appaitre le bouton relancer pour chaque changement de valeur par l'utilisateur
                     $("input").change(function(){
                         $("#lancerCalculBtn").show();
                     });
                     $("select").change(function(){
                         $("#lancerCalculBtn").show();
                     });
                     $("#btnAjouterChangementAffectation").click(function(){
                         $("#lancerCalculBtn").show();
                     });
                     $("#btnAjouterInterdiction").click(function(){
                         $("#lancerCalculBtn").show();
                     });

                 });



                 // dupliquer élément
                 $('#additional-field-model').duplicateElement({
                     "class_remove": ".remove-this-field",
                     "class_create": ".create-new-field"
                 });


                 ///// select js plugin
                 $(".equipe1").select2({
                     width:'100%'
                 });
                 $(".equipe2").select2({
                     width:'100%'
                 });
                 $(".selectChangeAffectation").select2({
                     width:'100%'
                 });



                 function getPoulesFromInfoChangeAffectation(infoChangeAffectation){
                     var poules = [];

                     var alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N','O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ];
                     $.each(infoChangeAffectation, function(key, value){
                        var poule = alphabet[key-1];
                         poules.push([key, poule]);
                     });

                     return poules;
                 }

                 function remplirSelectPouleDepartEtDestination(poules){
                     var tailleOptionPoule = $("#pouleDepart option").size();
                     console.log("tailleOptionPoule: " + tailleOptionPoule);

                     // remplir poule départ et destination pour la premiere fois
                     if($("#pouleDepart option").size() <= 1){
                         for(var i=0; i<poules.length; i++){
//                             console.log(poules[i]);
                             $('#pouleDepart').append($('<option>', {
                                 value: poules[i][0],
                                 text : poules[i][1]
                             }));
                             $('#pouleDestination').append($('<option>', {
                                 value: poules[i][0],
                                 text : poules[i][1]
                             }));
                         }
                     }

                 }


                 //// JS pour changement d'affectation d'équipes par poule
                 // JS pour changement de scénario
                 $("#scenarioChangeAffectation").select2({
                     width:'100%'
                 }).on("change", function(e) {
                     // mostly used event, fired to the original element when the value changes
                     var scenarioChangeAffectation = $(this).val();
                     console.log("scenarioChangeAffectation: " + scenarioChangeAffectation);

                     if(scenarioChangeAffectation === "optimalSansContrainte"){
                         var infoChangeAffectation = {{ infoChangeAffectation.optimalSansContrainte | json_encode | raw}};

                         // obtenir poules
                         var poules = getPoulesFromInfoChangeAffectation(infoChangeAffectation);
                         remplirSelectPouleDepartEtDestination(poules);

                     }
                     else if(scenarioChangeAffectation === "equitableSansContrainte"){
                         var infoChangeAffectation = {{ infoChangeAffectation.equitableSansContrainte | json_encode | raw}};

                         // obtenir poules
                         var poules = getPoulesFromInfoChangeAffectation(infoChangeAffectation);
                         remplirSelectPouleDepartEtDestination(poules);

                     }

                     else if(scenarioChangeAffectation === "optimalAvecContrainte"){
                         var infoChangeAffectation = {{ infoChangeAffectation.optimalAvecContrainte | json_encode | raw}};

                         // obtenir poules
                         var poules = getPoulesFromInfoChangeAffectation(infoChangeAffectation);
                         remplirSelectPouleDepartEtDestination(poules);

                     }
                     else if(scenarioChangeAffectation === "equitableAvecContrainte"){
                         var infoChangeAffectation = {{ infoChangeAffectation.equitableAvecContrainte | json_encode | raw}};

                         // obtenir poules
                         var poules = getPoulesFromInfoChangeAffectation(infoChangeAffectation);
                         remplirSelectPouleDepartEtDestination(poules);
                     }
                     else if (scenarioChangeAffectation === "vide"){
                         // supprimer les options
                         var selectPoule = $("#pouleDepart")
                                 .find("option")
                                 .remove()
                                 .end();
                         var selectPoule = $("#pouleDestination")
                                 .find("option")
                                 .remove()
                                 .end();
                     }

                     // reinitialiser les autres champs
                     $("#select2-pouleDepart-container").text("-- selectionnez une option --");
                     $("#select2-equipeDepart-container").text("-- selectionnez une option --");
                     $("#select2-pouleDestination-container").text("-- selectionnez une option --");
                     $("#select2-equipeDestination-container").text("-- selectionnez une option --");

                     // supprimer les options
                     var selectEquipe = $("#equipeDepart")
                             .find("option")
                             .remove()
                             .end();
                     selectEquipe.append('<option value="vide">   -- selectionnez une option --  </option>');
                     var selectEquipe = $("#equipeDestination")
                             .find("option")
                             .remove()
                             .end();
                     selectEquipe.append('<option value="vide">   -- selectionnez une option --  </option>');
                 })

                 function remplirSelectEquipe(scenario, poule, equipeDesignation){

                     var infoChangeAffectation = {{ infoChangeAffectation | json_encode | raw }};
                     var infoEquipe = infoChangeAffectation[scenario][poule];

                     // supprimer toutes les options
                     if(equipeDesignation == "depart" ){
                         $("#select2-equipeDepart-container").text("-- selectionnez une option --");

                         var selectEquipe = $("#equipeDepart")
                                 .find("option")
                                 .remove()
                                 .end();
                     }
                     else if (equipeDesignation == "destination"){
                         $("#select2-equipeDestination-container").text("-- selectionnez une option --");
                         var selectEquipe = $("#equipeDestination")
                                 .find("option")
                                 .remove()
                                 .end();
                     }

                     // ajouter une ligne 'selectionnez une option'
                     selectEquipe.append('<option value="vide">   -- selectionnez une option --  </option>');

                     if(poule !== "vide"){
                         for(var i=0; i<infoEquipe.length; i++){
                             var equipeNom = infoEquipe[i]["equipeNom"];
                             var equipeId = infoEquipe[i]["equipeId"];
                             selectEquipe.append('<option value="'+ equipeId  +'">' + equipeNom +'</option>');
                         }
                     }

                 }


                 // JS pour changement de poule de départ
                 $("#pouleDepart").select2({
                     width:'100%'
                 }).on("change", function(e) {
                     var scenariochoisi= $("#scenarioChangeAffectation").val();
                     var pouleDepart = $(this).val();

                     remplirSelectEquipe(scenariochoisi, pouleDepart, "depart");

                 })


                 // JS pour changement de poule de destination
                 $("#pouleDestination").select2({
                     width:'100%'
                 }).on("change", function(e) {
                     var scenariochoisi= $("#scenarioChangeAffectation").val();
                     var pouleDestination = $(this).val();

                     remplirSelectEquipe(scenariochoisi, pouleDestination, "destination");
                 })


                 // javascript quand on clique sur le bouton 'lancer le calcul'
                 $(document).ready(function(){

                     // ajouter des nouvelles lignes pour les contraintes d'interdiction
                     $("#btnAjouterInterdiction").click(function(){
                         console.log("------------------------------------ debug bouton ajouter des interdictions  ---------------------------------------");

                         var ligneNbr = $('#tbodyInterdictions tr').length;
                         console.log("ligneNbr : " + ligneNbr);

                         // obtenir les valeurs séléctionnées
                         var interdictionEquipe1Id = $("#equipe1 option:selected").val();
                         var interdictionEquipe2Id = $("#equipe2 option:selected").val();

                         console.log("interdictionEquipe1Id : " + interdictionEquipe1Id );
                         console.log("interdictionEquipe2Id : " + interdictionEquipe2Id );


                         // controler si l'id du premier equipe et celui du deuxième équipe sont équivalents
                         if(interdictionEquipe1Id == interdictionEquipe2Id ){
                             alert("Cette interdiction ne peut pas être prise en compte. Veuillez corriger votre sélection");
                             return;

                         }

                         // controler doublons dans un sens ou l'autre
                         // controler s'il y a déjà des interdictions présentes
                         if(ligneNbr> 0){
                             var listeInterdictions = [];

                             // obtenir la liste de toutes interdictions
                             $('#tbodyInterdictions tr').each(function(i, el){
                                 var $tds = $(this).find('td');
                                 var premierEquipeId = $tds.eq(1).find("span").text().trim();
                                 var deuxiemeEquipeId = $tds.eq(2).find("span").text().trim();

                                 listeInterdictions.push({premierEquipeId: premierEquipeId, deuxiemeEquipeId: deuxiemeEquipeId} );
                                 listeInterdictions.push({premierEquipeId: deuxiemeEquipeId, deuxiemeEquipeId: premierEquipeId} );

                             });

                             console.log("listeInterdictions: " + JSON.stringify(listeInterdictions));

                             // controler pour chaque interdiction présente
                             for(var i=0; i<listeInterdictions.length; i++){
                                 var premierEquipeInterdiction = listeInterdictions[i]["premierEquipeId"] ;
                                 var deuxiemeEquipeInterdiction = listeInterdictions[i]["deuxiemeEquipeId"] ;

                                 if(premierEquipeInterdiction == interdictionEquipe1Id && deuxiemeEquipeInterdiction == interdictionEquipe2Id){
                                     alert("Cette interdiction existe déjà. Veuillez corriger votre sélection");
                                     return;
                                 }

                             }
                         }


                         // ajouter une nouvelle ligne dans la table d'interdictions
                         if(interdictionEquipe1Id != "vide" && interdictionEquipe2Id  != "vide"){
                             var interdictionEquipe1Nom = $("#equipe1 option:selected").text();
                             console.log("interdictionEquipe1Nom : " + interdictionEquipe1Nom  );

                             var interdictionEquipe2Nom = $("#equipe2 option:selected").text();
                             console.log("interdictionEquipe2Nom : " + interdictionEquipe2Nom  );

                             var newLigneInterdiction = "\
                             <tr id=\"interdiction" + ligneNbr + "\"> \
                                 <td width=\"10%\" > Interdiction </td> \
                                 <td width=\"20%\"> " + interdictionEquipe1Nom + "  <span id=\"interdiction" + ligneNbr + "equipe1\" style=\"display:none\" >" +  interdictionEquipe1Id + "</span>  </td> \
                                 <td width=\"20%\"> " + interdictionEquipe2Nom + "  <span id=\"interdiction" + ligneNbr + "equipe2\" style=\"display:none\" >" +  interdictionEquipe2Id + "</span> </td> \
                                 <td width=\"10%\"> \
                                     <button id=\"btnSupprimerInterdiction" +  ligneNbr + "\"  class=\"btn btn-primary\"> Supprimer </button> \
                                 </td> \
                             </tr>";

                             $("#tbodyInterdictions").append(newLigneInterdiction);

                             // binding jquery bouton supprimer
                             $("#btnSupprimerInterdiction" + ligneNbr).click(function(){
                                 $(this).closest('tr').remove();
                             });

                         }

                     });


                     // ajouter des nouvelles lignes pour les changements d'affectation d'équipes par poule
                     $("#btnAjouterChangementAffectation").click(function(){
                         console.log("------------------------------------ debug bouton ajouter des changements d'affectation  -------------------------------");

                         // obtenir valeurs renseignées par l'utilisateur
                         var scenario = $("#scenarioChangeAffectation option:selected").val();
                         var pouleDepart = $("#pouleDepart option:selected").val();
                         var equipeDepart = $("#equipeDepart option:selected").val();
                         var pouleDestination = $("#pouleDestination option:selected").val();
                         var equipeDestination = $("#equipeDestination option:selected").val();

                         console.log("scenario: " + scenario);
                         console.log("pouleDepart: " + pouleDepart);
                         console.log("equipeDepart: " + equipeDepart);
                         console.log("pouleDestination: " + pouleDestination);
                         console.log("equipeDestination: " + equipeDestination);

                         // ajouter une ligne si toutes les valeurs sont remplies
                         if(scenario != "vide" && pouleDepart != "vide" && equipeDepart != "vide" && pouleDestination != "vide" && equipeDestination != "vide"){
                             var ligneNbr = $('#tbodyChangeAffectation tr').length;
                             console.log("ligneNbr : " + ligneNbr);

                             // controle la poule de départ est égale à la poule de destination
                             if(pouleDepart == pouleDestination){
                                 alert("La poule d’origine doit être différente de la poule de destination. Veuillez corriger votre sélection.");
                                 return;
                             }

                             var statutErreur = 0;
                             if(ligneNbr > 0){
                                 // controle team départ ou team destination ne doit pas figurer sur la liste de changements présente

                                 var listeChangeAffect = {};

                                 // obtenir la liste de tous changement d'affectation
                                 $('#tbodyChangeAffectation tr').each(function(i, el){
                                     var $tds = $(this).find('td');
                                     var scenarioTmp = $tds.eq(0).find("span").text().trim();
                                     console.log("----------------------------------------------------------------------- ");
                                     var equipeDepartTmp = $tds.eq(2).find("span").text().trim();
                                     var equipeDestinationTmp = $tds.eq(4).find("span").text().trim();
                                     var equipesTmp = [equipeDepartTmp, equipeDestinationTmp];

                                     if (scenarioTmp in listeChangeAffect){
                                         listeChangeAffect[scenarioTmp].push(equipeDepartTmp);
                                         listeChangeAffect[scenarioTmp].push(equipeDestinationTmp);
                                     }
                                     else{
                                         listeChangeAffect[scenarioTmp] = equipesTmp;
                                     }

                                 });

                                 console.log("listeChangeAffect: " + JSON.stringify(listeChangeAffect));

                                 // controler pour chaque changement d'affectation présent
                                 $.each(listeChangeAffect, function(scenarioExiste, listeEquipesExiste){

                                     var testEquipeDepart = $.inArray(equipeDepart, listeEquipesExiste);
                                     console.log("testEquipeDepart: " + testEquipeDepart);
                                     var testEquipeDestination = $.inArray(equipeDestination, listeEquipesExiste);
                                     console.log("testEquipeDestination: " + testEquipeDestination);

                                     if(scenarioExiste == scenario && (   $.inArray(equipeDepart, listeEquipesExiste) != -1 ) ){
                                         alert("Cette équipe a déjà été sélectionnée pour un changement d’affectation à une poule. Veuillez corriger votre sélection.");
                                         statutErreur = 1;
                                         return;
                                     }
                                     if(scenarioExiste == scenario && (  $.inArray(equipeDestination, listeEquipesExiste) != -1 ) ){
                                         alert("Cette équipe a déjà été sélectionnée pour un changement d’affectation à une poule. Veuillez corriger votre sélection.");
                                         statutErreur = 1;
                                         return;
                                     }
                                 });



                             }


                             console.log("statutErreur: " + statutErreur);
                             if(statutErreur == 0){
                                 // ajouter un nouveau changement d'affectation sur la liste
                                 var scenarioNom = $("#scenarioChangeAffectation option:selected").text();
                                 var pouleDepartNom = $("#pouleDepart option:selected").text();
                                 var pouleDestinationNom = $("#pouleDestination option:selected").text();
                                 var equipeDepartNom = $("#equipeDepart option:selected").text();
                                 var equipeDestinationNom = $("#equipeDestination option:selected").text();

                                 var newLigneChangeAffect = "\
                                     <tr id=\"changementAffectation" + ligneNbr + "\"> \
                                         <td width=\"15%\" > " + scenarioNom + "  <span id=\"changementAffectation" + ligneNbr + "scenario\" style=\"display:none\" >" +  scenario + "</span>  </td> \
                                         <td width=\"10%\" > " + pouleDepartNom + "  <span id=\"changementAffectation" + ligneNbr + "pouleDepart\" style=\"display:none\" >" +  pouleDepart + "</span>  </td> \
                                         <td width=\"15%\" > " + equipeDepartNom + "  <span id=\"changementAffectation" + ligneNbr + "equipeDepart\" style=\"display:none\" >" +  equipeDepart + "</span>  </td> \
                                         <td width=\"10%\" > " + pouleDestinationNom + "  <span id=\"changementAffectation" + ligneNbr + "pouleDestination\" style=\"display:none\" >" +  pouleDestination + "</span>  </td> \
                                         <td width=\"15%\" > " + equipeDestinationNom + "  <span id=\"changementAffectation" + ligneNbr + "equipeDestination\" style=\"display:none\" >" +  equipeDestination + "</span>  </td> \
                                         <td width=\"10%\" > \
                                             <button id=\"btnSupprimerChangeAffect" +  ligneNbr + "\"  class=\"btn btn-primary\"> Supprimer </button> \
                                         </td> \
                                     </tr>";

                                 $("#tbodyChangeAffectation").append(newLigneChangeAffect);

                                 // binding jquery bouton supprimer
                                 $("#btnSupprimerChangeAffect" + ligneNbr).click(function(){
                                     $(this).closest('tr').remove();
                                 });

                             }

                             // reinitialiser tous les elements select
                             reinitialiserSelectValeurs();



                         }

                     });


                     function reinitialiserSelectValeurs(){
//                     console.log("DEBUG reinitialiserSelectValeurs");

                         // reinitialiser les scénarios
                         $("#select2-scenarioChangeAffectation-container").text("-- selectionnez une option --");
                         $("#scenarioChangeAffectation").val("vide");

                         // reinitialiser les poules de départ
                         $("#select2-pouleDepart-container").text("-- selectionnez une option --");
                         var selectPouleDepart = $("#pouleDepart")
                                 .find("option")
                                 .remove()
                                 .end();
                         selectPouleDepart.append('<option value="vide">   -- selectionnez une option --  </option>');


                         // reinitialiser les équipes de départ
                         $("#select2-equipeDepart-container").text("-- selectionnez une option --");
                         var selectEquipeDepart = $("#equipeDepart")
                                 .find("option")
                                 .remove()
                                 .end();
                         selectEquipeDepart.append('<option value="vide">   -- selectionnez une option --  </option>');

                         // reinitialiser les poules de destination
                         $("#select2-pouleDestination-container").text("-- selectionnez une option --");
                         var selectPouleDestination = $("#pouleDestination")
                                 .find("option")
                                 .remove()
                                 .end();
                         selectPouleDestination.append('<option value="vide">   -- selectionnez une option --  </option>');

                         // reinitialiser les équipes de destination
                         $("#select2-equipeDestination-container").text("-- selectionnez une option --");
                         var selectEquipeDestination = $("#equipeDestination")
                                 .find("option")
                                 .remove()
                                 .end();
                         selectEquipeDestination.append('<option value="vide">   -- selectionnez une option --  </option>');

                     }



                     function getChangeAffectations(){
                         var tabChangeAffectation = {};

                         $('#tbodyChangeAffectation tr').each(function() {

                             var scenarioChangeAffect = $(this).find("td").eq(0).find("span").text().trim();
                             var pouleDepartChangeAffect = $(this).find("td").eq(1).find("span").text().trim();
                             var equipeDepartChangeAffect = $(this).find("td").eq(2).find("span").text().trim();
                             var pouleDestinationChangeAffect = $(this).find("td").eq(3).find("span").text().trim();
                             var equipeDestinationChangeAffect = $(this).find("td").eq(4).find("span").text().trim();
                             var objTmp = {"pouleDepart" : pouleDepartChangeAffect,
                                 "equipeDepart": equipeDepartChangeAffect, "pouleDestination" : pouleDestinationChangeAffect,
                                 "equipeDestination" : equipeDestinationChangeAffect
                             };
//                             console.log("objTmp: " + JSON.stringify(objTmp));

                             if( scenarioChangeAffect in tabChangeAffectation ){
                                 tabChangeAffectation[scenarioChangeAffect].push(objTmp);
                             }
                             else{
                                 tabChangeAffectation[scenarioChangeAffect] = [objTmp];
                             }

                         });


                         return tabChangeAffectation;

                     }

                     ////////////////////////////////////////////////////////////////   Lancer Le Calcul //////////////////////////////////////////////////////////
                     // selectionner la valeur pour la variation du nombre d'équipes par poule
                     $("#variationNbrEquipe").val({{ varEquipeParPouleChoisi }});

                     // bloquer le bouton de lancement si le résultat est de type final
                     var finalStatut = "{{ finalStatut  }}";
                     console.log("finalStatut: " + finalStatut)

                     // filtre de la table repartition homogene
                     var dataTableRepartitionHomogene = $("#tableContrainteRepartitionHomogene").DataTable({
                         "paging":   false
                     });

                     if(finalStatut == "oui"){
                         $('#lancerCalculBtn').prop('disabled', true);

                     }else{
                         $("#lancerCalculBtn").click(function(){
                             console.log("------------------------------------ debug bouton lancer calcul ---------------------------------------");
                             // nettoyer le filtre de recherche de datatable
                             console.log("nettoyer filtre recherche datatable");
                             dataTableRepartitionHomogene.search( '' )
                                     .columns().search( '' )
                                     .draw();

                             // récupérer le type de match
                             var typeMatch =   $('input[name=typeRencontre]:checked').val();
                             console.log("typeMatch: " + typeMatch);

                             // récupérer l'id du groupe
                             var idGroupe = {{ idGroupe }};
                             console.log("idGroupe : " + idGroupe);

                             // récupérer le nombre de poules
                             var poulesNbr = $("#inputPoulesNbr").val();
                             console.log("poulesNbr : " + poulesNbr );

                             // récupérer la variation du nombre d'équipes par pouls
                             var varEquipeParPoule = $("#variationNbrEquipe").val();
                             console.log("varEquipeParPoule : " + varEquipeParPoule );

                             // obtenir l'id du résultat
                             var idResultat = {{ idResultat }};
                             console.log("idResultat: " + idResultat );


                             if(  (typeMatch == "allerRetour" || typeMatch == "allerSimple") && (poulesNbr == "" || parseInt(poulesNbr)<2 ) ){
                                 alert("Veuillez vérifier que le nombre de poules donné est valide");
                             }
                             else if (typeMatch == "plateau"  && ((poulesNbr == "" || parseInt(poulesNbr)<1 )) ) {
                                 alert("Veuillez vérifier que le nombre de poules donné est valide");
                             }
                             else{
                                 var interdictions = getContraintes();
                                 console.log("interdictions: " + JSON.stringify(interdictions));

                                 var repartitionsHomogenes = verifRepartitionHomogene();
                                 console.log("repartitionsHomogenes: " + JSON.stringify(repartitionsHomogenes) );

                                 var changeAffectEquipes = getChangeAffectations();
                                 console.log("changeAffectEquipes: " + JSON.stringify(changeAffectEquipes) );

                                 // si la vérification des répartitions homogenes retourne une erreur
                                 if(repartitionsHomogenes == "erreur" ){
                                     return;
                                 }

                                 // il faut choisir soit la variation du nombre d'équipe par poule ou le changement d'affectation d'équipes par poule
                                if(varEquipeParPoule > 0 && !$.isEmptyObject(changeAffectEquipes)){
                                    alert("Nous ne pouvons pas traiter la variation du nombre d'équipes par poule avec le changement d'affectation d'équipes par poule. Veuillez lancer avec seulement une option");
                                    return
                                }


                                 alert("Le calcul est en cours. Vous recevrez un mail pour vous avertir de la mise à disposition de vos résultats de calculs");


                                 // agréger les input params
                                 var inputParams = {"typeMatch": typeMatch, "poulesNbr": poulesNbr, "idGroupe": idGroupe,
                                     "interdictions": interdictions, "repartitionsHomogenes"  : repartitionsHomogenes,
                                     "varEquipeParPoule": varEquipeParPoule, "idAncienResultat": idResultat,
                                     "changeAffectEquipes": changeAffectEquipes
                                 };
                                 console.log("inputParams : " + JSON.stringify(inputParams));


                                 // AJAX requete
                                 $.ajax({
                                     url: '/admin/poules/lancer-calcul/',
                                     type: 'POST',
                                     data: inputParams,
                                     dataType : "json",
                                     success: function(data, textStatus, jqXHR)
                                     {
                                         console.log('data: ' + JSON.stringify(data));

                                         var urlRedirect = window.location.origin + "/admin/rapports";
                                         console.log('urlRedirect: ' + urlRedirect);

                                         // redirect à la page rapport
                                         window.location = urlRedirect;

                                     },
                                     error: function(jqXHR, textStatus, errorThrown)
                                     {
                                         // Handle errors here
                                         console.log('ERRORS: ' + textStatus);
                                     }
                                 });

                             }


                         });


                     }





                 });



                 /**********************************************/
                             //partie contraintes//
                 /**********************************************/

                 function myCreateFunction() {
                     var table = $('#mesContraintes tbody');
                     var children = table.find('tr');
                     var numberChilds = children.length;
                     var lastChild = children.last();
                     console.log(lastChild);
                     table.append(lastChild[0].outerHTML);
                 }




                 function getContraintes(){
                     var tabContraintes = {};

                     var compteur = 1;
                     $('#tbodyInterdictions tr').each(function() {
                         var equipe1Id = $(this).find("td").eq(1).find("span").text().trim();
                         var equipe2Id = $(this).find("td").eq(2).find("span").text().trim();
                         var interdictionContrainte = [equipe1Id, equipe2Id];
                         console.log("interdictionContrainte: " + interdictionContrainte);
                         tabContraintes[compteur] = interdictionContrainte;
                         compteur ++;
                     });


                     return tabContraintes;

                 }

                 //////////traitement de la répartition homogène////////////

                 function verifRepartitionHomogene(){

                     var length = document.getElementById("tableContrainteRepartitionHomogene").rows.length;

                     var mesRepartitions = [];
                     for (i = 0; i < length-1; i++) {

                         var element = "repartitionHomogeneOption"+i;

                         var repartition = document.getElementById(element).value;

                         mesRepartitions.push(repartition);

                     }

                     //declaration des variables de nbrOccurences
                     var nbrEspoir = 0; var nbrDescendant = 0; var nbrPromu = 0; var nbrEquipeNiveauA = 0; var nbrEquipeNiveauB = 0; var nbrEquipeNiveauC = 0; var nbrTeteSerie2 = 0; var nbrTeteSerie1 = 0;

                     for (j = 0; j < mesRepartitions.length; j++) {

                         if (mesRepartitions[j] == "Espoir") {
                             nbrEspoir += 1;
                         }
                         else if (mesRepartitions[j] == "Descendant") {
                             nbrDescendant += 1;
                         }
                         else if (mesRepartitions[j] == "Promu") {
                             nbrPromu += 1;
                         }
                         else if (mesRepartitions[j] == "EquipeNiveauA") {
                             nbrEquipeNiveauA += 1;
                         }
                         else if (mesRepartitions[j] == "EquipeNiveauB") {
                             nbrEquipeNiveauB += 1;
                         }
                         else if (mesRepartitions[j] == "EquipeNiveauC") {
                             nbrEquipeNiveauC += 1;
                         }
                         else if (mesRepartitions[j] == "TeteSerie2") {
                             nbrTeteSerie2 += 1;
                         }
                         else if (mesRepartitions[j] == "TeteSerie1") {
                             nbrTeteSerie1 += 1;
                         }

                     }

                     //test sur le nombre d'occurence
                     //test sur le nombre d'occurence
                     if(nbrEspoir == 1){
                         alert("La catégorie Espoir doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrDescendant == 1){
                         alert("La catégorie Descendant doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrPromu == 1){
                         alert("La catégorie Promu doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrEquipeNiveauA == 1){
                         alert("La catégorie Equie de niveau A doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrEquipeNiveauB == 1){
                         alert("La catégorie Equie de niveau B doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrEquipeNiveauC == 1){
                         alert("La catégorie Equie de niveau C doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrTeteSerie2 == 1){
                         alert("La catégorie Tête de série 2 doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }
                     if(nbrTeteSerie1 == 1){
                         alert("La catégorie Tête de série 1 doit contenir au moins deux équipes. Veuillez choisir au moins une équipe supplémentaire pour cette catégorie  ou annuler la catégorie sélectionnée pour votre équipe.");
                         return "erreur";
                     }


                     var mesRepartitionsHomogenes = {};
                     for (i = 0; i < length-1; i++) {

                         var element = "repartitionHomogeneOption"+i;
                         var idVille = "repartitionHomogeneIdVille"+i;

                         var categorie = document.getElementById(element).value;
                         var ville = parseInt(document.getElementById(idVille).textContent);

                         var maRepartition = null;

                         if(categorie !="Aucun"){


                             if(categorie in mesRepartitionsHomogenes){
                                 mesRepartitionsHomogenes[categorie].push(ville);
                             }
                             else{
                                 mesRepartitionsHomogenes[categorie] = [ville];

                             }
                         }

                     }
                     return mesRepartitionsHomogenes;


                 }

             </script>

         {% endblock %}

     {% endblock %}

